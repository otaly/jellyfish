name: Web CI

on:
  workflow_dispatch:
  push:
    paths:
      - web/**

defaults:
  run:
    working-directory: ./web

jobs:
  unit_test:
    name: Unit test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: web

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up node cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  build_and_publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [unit_test]
    env:
      GAR_LOCATION: asia-northeast1
      REPOSITORY: jellyfish-web
      SERVICE: jellyfish-web

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: web

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ vars.WIF_PROVIDER }}"
          service_account: "${{ vars.WIF_SERVICE_ACCOUNT }}"

      - name: Docker Auth
        uses: "docker/login-action@v3"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        id: build-image
        uses: docker/build-push-action@v6
        with:
          context: web/.
          push: true
          tags: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
